name: Automated Security Testing

# Trigger the pipeline on every pull request targeting the main branch
on:
  pull_request:
    branches: [ "main" ]

jobs:
  # JOB 1: Dependency Scanning (SCA) - Finds vulnerable libraries
  dependency-scan:
    name: SCA - Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Scan for vulnerable dependencies
        uses: actions/dependency-review-action@v3
        # This action will FAIL the job if it finds new critical vulnerabilities

  # JOB 2: Static Analysis (SAST) - Finds bugs in source code
  codeql-sast-scan:
    name: SAST - CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # JOB 3: Dynamic Testing (DAST) - Tests the running app
  dast-scan:
    name:  DAST - OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: dependency-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Start application server
        run: |
          echo "Starting the application server..."
          nohup npm start > server.log 2>&1 &
          echo $! > server.pid
          sleep 10

          if curl -f http://localhost:3000; then
            echo "Server is running on port 3000"
          else
            echo "Server failed to start. Logs:"
            cat server.log
            exit 1
          fi
        env:
          PORT: 3000

      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://localhost:3000'
          cmd_options: '-a'
          fail_action: false
          create_issue: false

      - name: List files to find ZAP report (Debugging)
        run: |
          echo "Contents of current directory:"
          ls -la
          echo "Contents of .zap directory:"
          ls -la .zap/ || echo "No .zap directory found"

      - name: Stop application server
        if: always()
        run: |
          echo "Stopping server..."
          kill -TERM $(cat server.pid) 2>/dev/null || true
          rm -f server.pid

      - name: Upload ZAP Scan Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-full-report
          path: |
            .zap/report.html
            server.log

      - name: Upload ZAP Raw Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-raw-results
          path: .zap/
